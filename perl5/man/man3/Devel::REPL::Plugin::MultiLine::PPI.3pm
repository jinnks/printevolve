.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Devel::REPL::Plugin::MultiLine::PPI 3pm"
.TH Devel::REPL::Plugin::MultiLine::PPI 3pm "2016-02-16" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Devel::REPL::Plugin::MultiLine::PPI \- Read lines until all blocks are closed
.SH "VERSION"
.IX Header "VERSION"
version 1.003028
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Devel::REPL;
\&
\&    my $repl = Devel::REPL\->new;
\&    $repl\->load_plugin(\*(AqLexEnv\*(Aq);
\&    $repl\->load_plugin(\*(AqHistory\*(Aq);
\&    $repl\->load_plugin(\*(AqMultiLine::PPI\*(Aq);
\&    $repl\->run;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Plugin that will collect lines until you have no unfinished structures. This
lets you write subroutines, \f(CW\*(C`if\*(C'\fR statements, loops, etc. more naturally.
.PP
For example, without a MultiLine plugin,
.PP
.Vb 3
\&    $ my $x = 3;
\&    3
\&    $ if ($x == 3) {
.Ve
.PP
will throw a compile error, because that \f(CW\*(C`if\*(C'\fR statement is incomplete. With a
MultiLine plugin,
.PP
.Vb 3
\&    $ my $x = 3;
\&    3
\&    $ if ($x == 3) {
\&
\&    > print "OH NOES!"
\&
\&    > }
\&    OH NOES
\&    1
.Ve
.PP
you may write the code across multiple lines, such as in \f(CW\*(C`irb\*(C'\fR and \f(CW\*(C`python\*(C'\fR.
.PP
This module uses \s-1PPI\s0. This plugin is named \f(CW\*(C`MultiLine::PPI\*(C'\fR because someone
else may conceivably implement similar behavior some other less
dependency-heavy way.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\f(CW\*(C`Devel::REPL\*(C'\fR
.SH "SUPPORT"
.IX Header "SUPPORT"
Bugs may be submitted through the \s-1RT\s0 bug tracker <https://rt.cpan.org/Public/Dist/Display.html?Name=Devel-REPL>
(or bug\-Devel\-REPL@rt.cpan.org <mailto:bug-Devel-REPL@rt.cpan.org>).
.PP
There is also an irc channel available for users of this distribution, at
\&\f(CW\*(C`#devel\*(C'\fR on \f(CW\*(C`irc.perl.org\*(C'\fR <irc://irc.perl.org/#devel-repl>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Shawn M Moore, \f(CW\*(C`<sartak at gmail dot com>\*(C'\fR
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2007 by Shawn M Moore
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
