.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Catalyst::Manual::Deployment 3pm"
.TH Catalyst::Manual::Deployment 3pm "2020-07-21" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catalyst::Manual::Deployment \- Deploying Catalyst
.SH "DEPLOYMENT OPTIONS"
.IX Header "DEPLOYMENT OPTIONS"
Catalyst applications are most often deployed as a FastCGI or mod_perl
application (with FastCGI being the recommended option). However, as
Catalyst is based on the \s-1PSGI\s0 specification, any web handler
implementing that specification can be used to run Catalyst
applications.
.PP
This documentation most thoroughly covers the normal and traditional deployment
options, but will mention alternate methods of deployment, and we welcome
additional documentation from people deploying Catalyst in non-standard
environments.
.SS "Deployment in a shared hosting environment"
.IX Subsection "Deployment in a shared hosting environment"
Almost all shared hosting environments involve deploying Catalyst as a
FastCGI application on Apache. You will usually want to have a set of
libraries specific to your application installed on your shared host.
.PP
Full details of deploying Catalyst in a shared hosting environment are at
Catalyst::Manual::Deployment::SharedHosting.
.SS "FastCGI"
.IX Subsection "FastCGI"
FastCGI is the most common Catalyst deployment option. It is documented
generally in Catalyst::Manual::Deployment::FastCGI, and there are specific
instructions for using FastCGI with common web servers below:
.PP
\fIApache\fR
.IX Subsection "Apache"
.PP
Catalyst::Manual::Deployment::Apache::FastCGI
.PP
\fInginx\fR
.IX Subsection "nginx"
.PP
Catalyst::Manual::Deployment::nginx::FastCGI
.PP
\fIlighttpd\fR
.IX Subsection "lighttpd"
.PP
Catalyst::Manual::Deployment::lighttpd::FastCGI
.PP
\fIMicrosoft \s-1IIS\s0\fR
.IX Subsection "Microsoft IIS"
.PP
Catalyst::Manual::Deployment::IIS::FastCGI
.SS "mod_perl"
.IX Subsection "mod_perl"
Traditionally a common deployment option for dedicated applications,
mod_perl has some advantages and disadvantages over FastCGI. Use of
mod_perl is documented in
Catalyst::Manual::Deployment::Apache::mod_perl.
.SS "Development Server"
.IX Subsection "Development Server"
It is possible to deploy the Catalyst development server behind a
reverse proxy. This may work well for small-scale applications which are
in an early development phase, but which you want to be able to show to
people. See Catalyst::Manual::Deployment::DevelopmentServer.
.SS "\s-1PSGI\s0"
.IX Subsection "PSGI"
Catalyst can be deployed with any PSGI-compliant handler. See Catalyst::PSGI
for more information; a list of possible deployment servers are shown
below:
.PP
\fI\s-1NGINX\s0 Unit\fR
.IX Subsection "NGINX Unit"
.PP
\&\s-1NGINX\s0 Unit <https://unit.nginx.org> is a lightweight, dynamically configurable
web app server that supports running PSGI-capable apps.
.PP
\fIStarman\fR
.IX Subsection "Starman"
.PP
Starman is a high-performance Perl server implementation, which is designed
to be used directly (rather than behind a reverse proxy). It includes \s-1HTTP/1.1\s0
support, chunked requests and responses, keep-alive, and pipeline requests.
.PP
\fIStarlet\fR
.IX Subsection "Starlet"
.PP
Starlet is a standalone \s-1HTTP/1.0\s0 server with keep‚Äêalive support which is
suitable for running \s-1HTTP\s0 application servers behind a reverse proxy.
.PP
\fITwiggy\fR
.IX Subsection "Twiggy"
.PP
Twiggy is a high-performance asynchronous web server. It can be used
in conjunction with Catalyst, but there are a number of caveats which
mean that it is not suitable for most deployments.
.SS "Chef"
.IX Subsection "Chef"
Chef <https://www.chef.io/products/chef-infra/> is an open-source systems integration
framework built specifically for automating cloud computing deployments. A
Cookbooks demonstrating how to deploy a Catalyst application using Chef is
available at <https://supermarket.chef.io/cookbooks/catalyst> and
<https://github.com/melezhik/cookbooks/wiki/Catalyst\-cookbook\-intro>.
.SH "AUTHORS"
.IX Header "AUTHORS"
Catalyst Contributors, see Catalyst.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This library is free software. You can redistribute it and/or modify it under
the same terms as Perl itself.
