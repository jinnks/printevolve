.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Catalyst::Manual::Deployment::NGINXUnit::PSGI 3pm"
.TH Catalyst::Manual::Deployment::NGINXUnit::PSGI 3pm "2020-07-21" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catalyst::Manual::Deployment::NGINXUnit::PSGI \- Deploying Catalyst with NGINX Unit
.SH "NGINX Unit"
.IX Header "NGINX Unit"
Catalyst runs under \s-1NGINX\s0 Unit <https://unit.nginx.org> using \s-1PSGI.\s0
.SS "Configuration"
.IX Subsection "Configuration"
To configure a Catalyst app in \s-1NGINX\s0 Unit, upload a \s-1JSON\s0 configuration
snippet via Unit's config \s-1API,\s0 available at an \s-1IP\s0 socket or a Unix domain
socket (depending on Unit's startup settings):
.PP
.Vb 2
\&    # curl \-X PUT \-\-data\-binary @config.json \-\-unix\-socket \e
\&       /path/to/control.unit.sock http://localhost/config
.Ve
.PP
A minimal configuration <https://unit.nginx.org/configuration/#perl>
includes a listener and an application entity:
.PP
.Vb 6
\&    {
\&        "listeners": {
\&            "127.0.0.1:8080": {
\&                "pass": "applications/catalyst_app"
\&            }
\&        },
\&
\&        "applications": {
\&            "catalyst_app": {
\&                "type": "perl",
\&                "script": "/path/to/apps/myapp/myapp.psgi",
\&                "user": "catalyst_user",
\&                "group": "catalyst_group"
\&            }
\&        }
\&    }
.Ve
.PP
The \f(CW\*(C`script\*(C'\fR should point to your app's \f(CW\*(C`.psgi\*(C'\fR file; \f(CW\*(C`user\*(C'\fR and
\&\f(CW\*(C`group\*(C'\fR should have appropriate access rights.
.PP
After a successful reconfiguration, you can manage your Catalyst
app via the same config \s-1API\s0.
.Sp
.RS 4
Note: make sure the app's \f(CW\*(C`.psgi\*(C'\fR file includes the \f(CW\*(C`lib/\*(C'\fR
directory:
.Sp
.Vb 2
\&    use lib \*(Aqlib\*(Aq;
\&    use myapp;
.Ve
.RE
.SH "MORE INFO"
.IX Header "MORE INFO"
For more information on \s-1NGINX\s0 Unit, visit: <http://unit.nginx.org>
.SH "AUTHORS"
.IX Header "AUTHORS"
Catalyst Contributors, see Catalyst.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This library is free software. You can redistribute it and/or modify it under
the same terms as Perl itself.
